{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/vlad/terminals/src/components/Terminal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { Screen } from './Screen';\nimport { Pinpad } from './Pinpad';\nimport { Context } from '../context/Context';\nimport { miniContext } from '../context/miniContext';\nexport const Terminal = () => {\n  _s();\n\n  const [url, setUrl] = useState('passcheck');\n  const {\n    cards,\n    setCards\n  } = useContext(Context);\n  const [loginForm, setLoginForm] = useState({\n    id: '',\n    pincode: ''\n  });\n  const [donate, setDonate] = useState('');\n  const [takem, setTakem] = useState('');\n  const [sendForm, setSendForm] = useState({\n    id: '',\n    money: ''\n  });\n  const [auth, setAuth] = useState('');\n  const [page, setPage] = useState({\n    balance: false,\n    donate: false,\n    sendmoney: false,\n    takemoney: false\n  });\n  const [message, setMessage] = useState('');\n  const [focused, setFocused] = useState('id');\n\n  const sendMsg = msg => {\n    setMessage(msg);\n    return setTimeout(() => {\n      setMessage('');\n    }, 3000);\n  };\n\n  const passCheck = () => {\n    if (loginForm.id === '') {\n      sendMsg('Пожалуйста, введите ID карты');\n      setFocused('id');\n    } else if (loginForm.pincode === '') {\n      sendMsg('Пожалуйста, введите пинкод');\n      setFocused('pincode');\n    } else {\n      const card = cards.filter(card => card.id === loginForm.id);\n\n      if (card.length > 0) {\n        if (card[0].pincode === loginForm.pincode) {\n          setAuth(card[0].id);\n          setUrl('mainmenu');\n          setFocused('');\n        } else {\n          sendMsg('Неверный пинкод');\n          setFocused('pincode');\n        }\n      } else {\n        sendMsg('Несуществующая карта');\n        setFocused('id');\n      }\n    }\n  };\n\n  const donateFunc = () => {\n    if (donate === '') sendMsg('Пожалуйста, введите сумму');else {\n      const tmpDonate = parseInt(donate);\n      let tmpCards = cards;\n      tmpCards.filter(card => card.id === auth).map(card => card.money += tmpDonate);\n      setCards(tmpCards);\n      setDonate('');\n      sendMsg(`Баланс карты [${auth}] пополнен`);\n    }\n  };\n\n  const takeMoney = () => {\n    if (takem === '') sendMsg('Пожалуйста, введите сумму');else {\n      const tmpTakem = -parseInt(takem);\n      let tmpCards = cards;\n      tmpCards.filter(card => card.id === auth).map(card => {\n        if (card.money < -tmpTakem) {\n          sendMsg('Недостаточно средств');\n          setTakem('');\n        } else {\n          card.money += tmpTakem;\n          sendMsg('Средства успешно выведены');\n          setTakem('');\n        }\n      });\n      setCards(tmpCards);\n    }\n  };\n\n  const sendMoney = () => {\n    if (sendForm.id === '') {\n      sendMsg('Пожалуйста, введите счёт получателя');\n      setFocused('sendID');\n    } else if (sendForm.money === '') {\n      sendMsg('Пожалуйста, введите сумму');\n      setFocused('sendMoney');\n    } else {\n      let tmpCards = cards;\n      const tmpMoney = parseInt(sendForm.money);\n      const myCard = tmpCards.filter(card => card.id === auth);\n\n      if (tmpCards.filter(card => card.id === sendForm.id).length === 0) {\n        sendMsg('Получатель не существует');\n        setSendForm({\n          id: '',\n          money: ''\n        });\n        setFocused('sendID');\n      } else if (myCard[0].money < tmpMoney) {\n        sendMsg('Недостаточно средств');\n        setSendForm({\n          id: '',\n          money: ''\n        });\n        setFocused('sendMoney');\n      } else {\n        tmpCards.filter(card => card.id === auth).map(card => card.money -= tmpMoney);\n        tmpCards.filter(card => card.id === sendForm.id).map(card => card.money += tmpMoney);\n        setCards(tmpCards);\n        sendMsg('Операция выполнена успешно');\n        setSendForm({\n          id: '',\n          money: ''\n        });\n        setFocused('sendID');\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(miniContext.Provider, {\n    value: {\n      loginForm,\n      setLoginForm,\n      auth,\n      donate,\n      setDonate,\n      takem,\n      setTakem,\n      message,\n      setPage,\n      setAuth,\n      sendMsg,\n      passCheck,\n      url,\n      setUrl,\n      donateFunc,\n      takeMoney,\n      sendMoney,\n      sendForm,\n      setSendForm,\n      focused,\n      setFocused\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"terminal\",\n      children: [/*#__PURE__*/_jsxDEV(Screen, {\n        isAuth: auth,\n        page: page,\n        setPage: setPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Pinpad, {\n        auth: auth,\n        page: page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Terminal, \"QGv0JHaIw0slnM3Yhzu8HIoGclM=\");\n\n_c = Terminal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Terminal\");","map":{"version":3,"sources":["/home/vlad/terminals/src/components/Terminal.js"],"names":["React","useState","useContext","Screen","Pinpad","Context","miniContext","Terminal","url","setUrl","cards","setCards","loginForm","setLoginForm","id","pincode","donate","setDonate","takem","setTakem","sendForm","setSendForm","money","auth","setAuth","page","setPage","balance","sendmoney","takemoney","message","setMessage","focused","setFocused","sendMsg","msg","setTimeout","passCheck","card","filter","length","donateFunc","tmpDonate","parseInt","tmpCards","map","takeMoney","tmpTakem","sendMoney","tmpMoney","myCard"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,WAAD,CAA9B;AAEA,QAAM;AAAES,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBT,UAAU,CAACG,OAAD,CAAtC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC;AAAEa,IAAAA,EAAE,EAAE,EAAN;AAAUC,IAAAA,OAAO,EAAE;AAAnB,GAAD,CAA1C;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC;AAAEa,IAAAA,EAAE,EAAE,EAAN;AAAUQ,IAAAA,KAAK,EAAE;AAAjB,GAAD,CAAxC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACwB,IAAD,EAAOC,OAAP,IAAkBzB,QAAQ,CAAC;AAAE0B,IAAAA,OAAO,EAAE,KAAX;AAAkBX,IAAAA,MAAM,EAAE,KAA1B;AAAiCY,IAAAA,SAAS,EAAE,KAA5C;AAAmDC,IAAAA,SAAS,EAAE;AAA9D,GAAD,CAAhC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB9B,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAM,CAAC+B,OAAD,EAAUC,UAAV,IAAwBhC,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMiC,OAAO,GAAGC,GAAG,IAAI;AACnBJ,IAAAA,UAAU,CAACI,GAAD,CAAV;AACA,WAAOC,UAAU,CAAC,MAAM;AACpBL,MAAAA,UAAU,CAAC,EAAD,CAAV;AACH,KAFgB,EAEd,IAFc,CAAjB;AAGH,GALD;;AAOA,QAAMM,SAAS,GAAG,MAAM;AACpB,QAAIzB,SAAS,CAACE,EAAV,KAAiB,EAArB,EAAyB;AACrBoB,MAAAA,OAAO,CAAC,8BAAD,CAAP;AACAD,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAHD,MAIK,IAAIrB,SAAS,CAACG,OAAV,KAAsB,EAA1B,EAA6B;AAC9BmB,MAAAA,OAAO,CAAC,4BAAD,CAAP;AACAD,MAAAA,UAAU,CAAC,SAAD,CAAV;AACH,KAHI,MAID;AACA,YAAMK,IAAI,GAAG5B,KAAK,CAAC6B,MAAN,CAAaD,IAAI,IAAIA,IAAI,CAACxB,EAAL,KAAYF,SAAS,CAACE,EAA3C,CAAb;;AACA,UAAGwB,IAAI,CAACE,MAAL,GAAc,CAAjB,EAAmB;AACf,YAAGF,IAAI,CAAC,CAAD,CAAJ,CAAQvB,OAAR,KAAoBH,SAAS,CAACG,OAAjC,EAAyC;AACrCS,UAAAA,OAAO,CAACc,IAAI,CAAC,CAAD,CAAJ,CAAQxB,EAAT,CAAP;AACAL,UAAAA,MAAM,CAAC,UAAD,CAAN;AACAwB,UAAAA,UAAU,CAAC,EAAD,CAAV;AACH,SAJD,MAKI;AACAC,UAAAA,OAAO,CAAC,iBAAD,CAAP;AACAD,UAAAA,UAAU,CAAC,SAAD,CAAV;AACH;AACJ,OAVD,MAWI;AACAC,QAAAA,OAAO,CAAC,sBAAD,CAAP;AACAD,QAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ;AACJ,GA3BD;;AA6BA,QAAMQ,UAAU,GAAG,MAAM;AACrB,QAAGzB,MAAM,KAAK,EAAd,EAAkBkB,OAAO,CAAC,2BAAD,CAAP,CAAlB,KACI;AACA,YAAMQ,SAAS,GAAGC,QAAQ,CAAC3B,MAAD,CAA1B;AACA,UAAI4B,QAAQ,GAAGlC,KAAf;AACAkC,MAAAA,QAAQ,CAACL,MAAT,CAAgBD,IAAI,IAAIA,IAAI,CAACxB,EAAL,KAAYS,IAApC,EAA0CsB,GAA1C,CAA8CP,IAAI,IAAIA,IAAI,CAAChB,KAAL,IAAcoB,SAApE;AACA/B,MAAAA,QAAQ,CAACiC,QAAD,CAAR;AACA3B,MAAAA,SAAS,CAAC,EAAD,CAAT;AACAiB,MAAAA,OAAO,CAAE,iBAAgBX,IAAK,YAAvB,CAAP;AACH;AACJ,GAVD;;AAYA,QAAMuB,SAAS,GAAG,MAAM;AACpB,QAAG5B,KAAK,KAAK,EAAb,EAAiBgB,OAAO,CAAC,2BAAD,CAAP,CAAjB,KACI;AACA,YAAMa,QAAQ,GAAG,CAACJ,QAAQ,CAACzB,KAAD,CAA1B;AACA,UAAI0B,QAAQ,GAAGlC,KAAf;AACAkC,MAAAA,QAAQ,CAACL,MAAT,CAAgBD,IAAI,IAAIA,IAAI,CAACxB,EAAL,KAAYS,IAApC,EAA0CsB,GAA1C,CAA8CP,IAAI,IAAI;AAClD,YAAIA,IAAI,CAAChB,KAAL,GAAa,CAACyB,QAAlB,EAA2B;AACvBb,UAAAA,OAAO,CAAC,sBAAD,CAAP;AACAf,UAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,SAHD,MAII;AACAmB,UAAAA,IAAI,CAAChB,KAAL,IAAcyB,QAAd;AACAb,UAAAA,OAAO,CAAC,2BAAD,CAAP;AACAf,UAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;AACJ,OAVD;AAWAR,MAAAA,QAAQ,CAACiC,QAAD,CAAR;AACH;AACJ,GAlBD;;AAoBA,QAAMI,SAAS,GAAG,MAAM;AACpB,QAAI5B,QAAQ,CAACN,EAAT,KAAgB,EAApB,EAAuB;AACnBoB,MAAAA,OAAO,CAAC,qCAAD,CAAP;AACAD,MAAAA,UAAU,CAAC,QAAD,CAAV;AACH,KAHD,MAIK,IAAGb,QAAQ,CAACE,KAAT,KAAmB,EAAtB,EAAyB;AAC1BY,MAAAA,OAAO,CAAC,2BAAD,CAAP;AACAD,MAAAA,UAAU,CAAC,WAAD,CAAV;AACH,KAHI,MAID;AACA,UAAIW,QAAQ,GAAGlC,KAAf;AACA,YAAMuC,QAAQ,GAAGN,QAAQ,CAACvB,QAAQ,CAACE,KAAV,CAAzB;AACA,YAAM4B,MAAM,GAAGN,QAAQ,CAACL,MAAT,CAAgBD,IAAI,IAAIA,IAAI,CAACxB,EAAL,KAAYS,IAApC,CAAf;;AACA,UAAIqB,QAAQ,CAACL,MAAT,CAAgBD,IAAI,IAAIA,IAAI,CAACxB,EAAL,KAAYM,QAAQ,CAACN,EAA7C,EAAiD0B,MAAjD,KAA4D,CAAhE,EAAkE;AAC9DN,QAAAA,OAAO,CAAC,0BAAD,CAAP;AACAb,QAAAA,WAAW,CAAC;AAAEP,UAAAA,EAAE,EAAE,EAAN;AAAUQ,UAAAA,KAAK,EAAE;AAAjB,SAAD,CAAX;AACAW,QAAAA,UAAU,CAAC,QAAD,CAAV;AACH,OAJD,MAKK,IAAIiB,MAAM,CAAC,CAAD,CAAN,CAAU5B,KAAV,GAAkB2B,QAAtB,EAA+B;AAChCf,QAAAA,OAAO,CAAC,sBAAD,CAAP;AACAb,QAAAA,WAAW,CAAC;AAAEP,UAAAA,EAAE,EAAE,EAAN;AAAUQ,UAAAA,KAAK,EAAE;AAAjB,SAAD,CAAX;AACAW,QAAAA,UAAU,CAAC,WAAD,CAAV;AACH,OAJI,MAKD;AACAW,QAAAA,QAAQ,CAACL,MAAT,CAAgBD,IAAI,IAAIA,IAAI,CAACxB,EAAL,KAAYS,IAApC,EAA0CsB,GAA1C,CAA8CP,IAAI,IAAIA,IAAI,CAAChB,KAAL,IAAc2B,QAApE;AACAL,QAAAA,QAAQ,CAACL,MAAT,CAAgBD,IAAI,IAAIA,IAAI,CAACxB,EAAL,KAAYM,QAAQ,CAACN,EAA7C,EAAiD+B,GAAjD,CAAqDP,IAAI,IAAIA,IAAI,CAAChB,KAAL,IAAc2B,QAA3E;AACAtC,QAAAA,QAAQ,CAACiC,QAAD,CAAR;AACAV,QAAAA,OAAO,CAAC,4BAAD,CAAP;AACAb,QAAAA,WAAW,CAAC;AAAEP,UAAAA,EAAE,EAAE,EAAN;AAAUQ,UAAAA,KAAK,EAAE;AAAjB,SAAD,CAAX;AACAW,QAAAA,UAAU,CAAC,QAAD,CAAV;AACH;AACJ;AACJ,GAhCD;;AAkCA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAErB,MAAAA,SAAF;AAAaC,MAAAA,YAAb;AAA2BU,MAAAA,IAA3B;AAAiCP,MAAAA,MAAjC;AAAyCC,MAAAA,SAAzC;AAAoDC,MAAAA,KAApD;AAC7BC,MAAAA,QAD6B;AACnBW,MAAAA,OADmB;AACVJ,MAAAA,OADU;AACDF,MAAAA,OADC;AACQU,MAAAA,OADR;AACiBG,MAAAA,SADjB;AAC4B7B,MAAAA,GAD5B;AACiCC,MAAAA,MADjC;AACyCgC,MAAAA,UADzC;AAE7BK,MAAAA,SAF6B;AAElBE,MAAAA,SAFkB;AAEP5B,MAAAA,QAFO;AAEGC,MAAAA,WAFH;AAEgBW,MAAAA,OAFhB;AAEyBC,MAAAA;AAFzB,KAA7B;AAAA,2BAGA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI,QAAC,MAAD;AACI,QAAA,MAAM,EAAEV,IADZ;AAEI,QAAA,IAAI,EAAEE,IAFV;AAGI,QAAA,OAAO,EAAEC;AAHb;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAEH,IAAd;AAAoB,QAAA,IAAI,EAAEE;AAA1B;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAlIM;;GAAMlB,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useContext } from 'react'\nimport { Screen } from './Screen'\nimport { Pinpad } from './Pinpad'\nimport { Context } from '../context/Context'\nimport { miniContext } from '../context/miniContext'\n\nexport const Terminal = () => {\n    const [url, setUrl] = useState('passcheck')\n\n    const { cards, setCards } = useContext(Context)\n    const [loginForm, setLoginForm] = useState({ id: '', pincode: '' })\n    const [donate, setDonate] = useState('')\n    const [takem, setTakem] = useState('')\n    const [sendForm, setSendForm] = useState({ id: '', money: '' })\n    const [auth, setAuth] = useState('')\n    const [page, setPage] = useState({ balance: false, donate: false, sendmoney: false, takemoney: false })\n    const [message, setMessage] = useState('')\n\n    const [focused, setFocused] = useState('id')\n\n    const sendMsg = msg => {\n        setMessage(msg)\n        return setTimeout(() => {\n            setMessage('')\n        }, 3000)\n    }\n\n    const passCheck = () => {\n        if (loginForm.id === '') {\n            sendMsg('Пожалуйста, введите ID карты')\n            setFocused('id')\n        }\n        else if (loginForm.pincode === ''){\n            sendMsg('Пожалуйста, введите пинкод')\n            setFocused('pincode')\n        }\n        else{\n            const card = cards.filter(card => card.id === loginForm.id)\n            if(card.length > 0){\n                if(card[0].pincode === loginForm.pincode){\n                    setAuth(card[0].id)\n                    setUrl('mainmenu')\n                    setFocused('')\n                }\n                else{\n                    sendMsg('Неверный пинкод')\n                    setFocused('pincode')\n                }\n            }\n            else{\n                sendMsg('Несуществующая карта')\n                setFocused('id')\n            }\n        }\n    }\n\n    const donateFunc = () => {\n        if(donate === '') sendMsg('Пожалуйста, введите сумму')\n        else{\n            const tmpDonate = parseInt(donate)\n            let tmpCards = cards\n            tmpCards.filter(card => card.id === auth).map(card => card.money += tmpDonate)\n            setCards(tmpCards)\n            setDonate('')\n            sendMsg(`Баланс карты [${auth}] пополнен`)\n        }\n    }\n\n    const takeMoney = () => {\n        if(takem === '') sendMsg('Пожалуйста, введите сумму')\n        else{\n            const tmpTakem = -parseInt(takem)\n            let tmpCards = cards\n            tmpCards.filter(card => card.id === auth).map(card => {\n                if (card.money < -tmpTakem){\n                    sendMsg('Недостаточно средств')\n                    setTakem('')\n                }\n                else{\n                    card.money += tmpTakem\n                    sendMsg('Средства успешно выведены')\n                    setTakem('')\n                }\n            })\n            setCards(tmpCards)\n        }\n    }\n\n    const sendMoney = () => {\n        if (sendForm.id === ''){\n            sendMsg('Пожалуйста, введите счёт получателя')\n            setFocused('sendID')\n        }\n        else if(sendForm.money === ''){\n            sendMsg('Пожалуйста, введите сумму')\n            setFocused('sendMoney')\n        }\n        else{\n            let tmpCards = cards\n            const tmpMoney = parseInt(sendForm.money)\n            const myCard = tmpCards.filter(card => card.id === auth)\n            if (tmpCards.filter(card => card.id === sendForm.id).length === 0){\n                sendMsg('Получатель не существует')\n                setSendForm({ id: '', money: '' })\n                setFocused('sendID')\n            }\n            else if (myCard[0].money < tmpMoney){\n                sendMsg('Недостаточно средств')\n                setSendForm({ id: '', money: '' })\n                setFocused('sendMoney')\n            }\n            else{\n                tmpCards.filter(card => card.id === auth).map(card => card.money -= tmpMoney)\n                tmpCards.filter(card => card.id === sendForm.id).map(card => card.money += tmpMoney)\n                setCards(tmpCards)\n                sendMsg('Операция выполнена успешно')\n                setSendForm({ id: '', money: '' })\n                setFocused('sendID')\n            }\n        }\n    }\n\n    return(\n        <miniContext.Provider value={{ loginForm, setLoginForm, auth, donate, setDonate, takem,\n        setTakem, message, setPage, setAuth, sendMsg, passCheck, url, setUrl, donateFunc,\n        takeMoney, sendMoney, sendForm, setSendForm, focused, setFocused }}>\n        <div className='terminal'>\n            <Screen \n                isAuth={auth}\n                page={page}\n                setPage={setPage}\n            />\n            <Pinpad auth={auth} page={page}/>\n        </div>\n        </miniContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}